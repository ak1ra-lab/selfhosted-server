---
- name: ensure apt directories exists
  ansible.builtin.file:
    path: "{{ directory }}"
    state: directory
  loop:
    - "/etc/apt/keyrings"
    - "/etc/apt/apt.conf.d"
    - "/etc/apt/preferences.d"
  loop_control:
    loop_var: directory

- name: import apt key from apt_key_url
  ansible.builtin.get_url:
    url: "{{ apt_key_url }}"
    dest: "{{ apt_keyrings_dest }}"

- name: add apt repo in DEB822 format
  vars:
    # ansible_architecture return x86_64,
    # but $(dpkg --print-architecture) return = amd64
    deb_architectures:
      x86_64: amd64 # Common Intel/AMD 64-bit
      i386: i386 # Intel 32-bit
      i686: i386 # Older 32-bit
      aarch64: arm64 # 64-bit ARM
      armv7l: armhf # 32-bit ARM hard-float
      armv6l: armel # 32-bit ARM soft-float (rare)
      ppc64le: ppc64el # PowerPC 64-bit Little Endian
      s390x: s390x # IBM System z
      riscv64: riscv64 # RISC-V 64-bit
  ansible.builtin.deb822_repository:
    name: "{{ apt_repo }}"
    state: present
    enabled: true
    types: deb
    uris: "{{ apt_repo_uris }}"
    suites: "{{ apt_repo_suites }}"
    components: "{{ apt_repo_components }}"
    architectures: "{{ deb_architectures[ansible_architecture] | default(ansible_architecture) }}"
    signed_by: "{{ apt_keyrings_dest }}"

- name: add apt pinning
  when: (apt_pinning | ansible.builtin.bool)
  ansible.builtin.copy:
    dest: "/etc/apt/preferences.d/99{{ apt_repo }}"
    content: |
      Package: *
      Pin: origin {{ apt_repo_uris | ansible.builtin.urlsplit('hostname') }}
      Pin-Priority: 900
    mode: "0644"

- name: add unattended-upgrades origins pattern
  when: (apt_unattended_upgrades | ansible.builtin.bool)
  ansible.builtin.copy:
    dest: "/etc/apt/apt.conf.d/90unattended-upgrades-{{ apt_repo }}"
    content: |
      Unattended-Upgrade::Origins-Pattern:: "origin={{ apt_repo_uris | ansible.builtin.urlsplit('hostname') }}";
    mode: "0644"

- name: apt_install packages from apt_repo
  when: (apt_repo_packages | length) > 0
  ansible.builtin.apt:
    name: "{{ apt_repo_packages }}"
    update_cache: true
    state: present

- name: apt-mark hold on apt_repo_packages
  when: (apt_mark_hold | ansible.builtin.bool)
  block:
    - name: apt-mark hold on apt_repo_packages
      ansible.builtin.command: "apt-mark hold {{ package }}"
      loop: "{{ apt_repo_packages }}"
      loop_control:
        loop_var: package
      register: apt_mark_hold_register

    - name: debug_var on apt_mark_hold_register
      when: (debug_var | ansible.builtin.bool)
      ansible.builtin.debug:
        var: apt_mark_hold_register
