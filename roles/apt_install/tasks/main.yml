---
- name: assert required vars are set
  ansible.builtin.assert:
    that:
      - >
        (apt_repo | default('') | length > 0) and
        (apt_repo_uris | default('') | length > 0) and
        (apt_keyrings_dest | default('') | length > 0)
    fail_msg: "All of [apt_repo, apt_repo_uris, apt_keyrings_dest] must be set"

- name: fail if none of the apt_keyrings vars are set
  ansible.builtin.assert:
    that:
      - >
        (apt_keyrings_url | default('') | length > 0) or
        (apt_keyrings_file | default('') | length > 0) or
        (apt_keyrings_content | default('') | length > 0)
    fail_msg: "At least one of [apt_keyrings_url, apt_keyrings_file, apt_keyrings_content] must be set"

- name: ensure apt directories exists
  ansible.builtin.file:
    path: "{{ directory }}"
    state: directory
  loop:
    - "/etc/apt/keyrings"
    - "/etc/apt/apt.conf.d"
    - "/etc/apt/preferences.d"
  loop_control:
    loop_var: directory

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_key_module.html
# The apt-key command used by this module has been deprecated.
- name: import apt keyrings from apt_keyrings_url
  when:
    - (apt_keyrings_url | default('') | length > 0)
  ansible.builtin.get_url:
    url: "{{ apt_keyrings_url }}"
    dest: "{{ apt_keyrings_dest }}"

- name: import apt keyrings from apt_keyrings_file
  when:
    - (apt_keyrings_file | default('') | length > 0)
  ansible.builtin.copy:
    src: "{{ apt_keyrings_file }}"
    dest: "{{ apt_keyrings_dest }}"
    mode: "0644"

- name: import apt keyrings from apt_keyrings_content
  when:
    - (apt_keyrings_content | default('') | length > 0)
  ansible.builtin.copy:
    dest: "{{ apt_keyrings_dest }}"
    mode: "0644"
    content: |
      {{ apt_keyrings_content }}

- name: add apt repo in DEB822 format
  ansible.builtin.deb822_repository:
    name: "{{ apt_repo }}"
    state: present
    enabled: true
    types: deb
    uris: "{{ apt_repo_uris }}"
    suites: "{{ apt_repo_suites }}"
    components: "{{ apt_repo_components }}"
    architectures: "{{ dpkg_architectures[ansible_architecture] | default(ansible_architecture) }}"
    signed_by: "{{ apt_keyrings_dest }}"

# https://manpages.debian.org/bookworm/apt/apt_preferences.5.en.html
# The pattern "*" in a Package field is not considered a glob(7) expression in itself.
- name: add apt pinning
  when:
    - (apt_pinning | ansible.builtin.bool)
  ansible.builtin.copy:
    dest: "/etc/apt/preferences.d/90{{ apt_repo }}"
    content: |
      Package: *
      Pin: origin {{ apt_pinning_origin }}
      Pin-Priority: 900
    mode: "0644"

- name: add unattended-upgrades origins pattern
  when:
    - (apt_unattended_upgrades | ansible.builtin.bool)
  ansible.builtin.copy:
    dest: "/etc/apt/apt.conf.d/90unattended-upgrades-{{ apt_repo }}"
    content: |
      Unattended-Upgrade::Origins-Pattern:: "site={{ apt_unattended_upgrades_site }}";
    mode: "0644"

- name: apt_install packages from apt_repo
  when:
    - (apt_repo_packages | length) > 0
  block:
    - name: apt_install packages from apt_repo
      ansible.builtin.apt:
        name: "{{ apt_repo_packages }}"
        update_cache: true
        state: present

    - name: apt-mark hold on apt_repo_packages
      when:
        - (apt_mark_hold | ansible.builtin.bool)
      ansible.builtin.command: "apt-mark hold {{ package }}"
      loop: "{{ apt_repo_packages }}"
      loop_control:
        loop_var: package
      register: apt_mark_hold_register

    - name: debug_var on apt_mark_hold_register
      when:
        - (apt_mark_hold | ansible.builtin.bool)
      ansible.builtin.debug:
        var: apt_mark_hold_register
