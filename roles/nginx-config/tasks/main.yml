---
- name: check /etc/nginx/.ansible-managed
  ansible.builtin.stat:
    path: /etc/nginx/.ansible-managed
  register: ansible_managed

- name: backup nginx config files
  community.general.archive:
    path: /etc/nginx
    dest: "/etc/nginx.{{ ansible_date_time.iso8601_basic_short }}.tgz"
    mode: "0644"
    remove: true
  when: not ansible_managed.stat.exists

- name: ensure directories exists
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ nginx_config_user }}"
    group: "{{ nginx_config_group }}"
    mode: "0755"
  loop:
    - /etc/nginx
    - /etc/nginx/conf.d
    - /var/log/nginx
    - /var/www
  when: not ansible_managed.stat.exists

- name: check /etc/nginx/dhparam.pem
  ansible.builtin.stat:
    path: /etc/nginx/dhparam.pem
  register: stat_dhpram

- name: create /etc/nginx/dhparam.pem for later use
  ansible.builtin.command: openssl dhparam -out /etc/nginx/dhparam.pem 2048
  when:
    - not ansible_managed.stat.exists
    - not stat_dhpram.stat.exists

- name: template /etc/nginx/nginx.conf
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: "0644"
  when: not ansible_managed.stat.exists

- name: copy nginx base config
  ansible.builtin.copy:
    # if it does not end with "/", the directory itself with all contents is copied.
    src: nginx
    dest: /etc/
    mode: preserve
  notify:
    - change file permission
    - test new nginx config
    - reload nginx config
  when: not ansible_managed.stat.exists

- name: mark nginx config has managed by ansible
  ansible.builtin.file:
    path: /etc/nginx/.ansible-managed
    state: touch
    mode: "0644"
  when: not ansible_managed.stat.exists

- include_vars: server.yml
  when: nginx_config_template_server

- include_tasks: server.yml
  when: nginx_config_template_server
